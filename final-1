//frontend\frontend\src\app\signup\signup.css
/* ====== Marsh McLennan Themed Signup Page ====== */

/* Base layout */
.signup-container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: 3rem;
  padding: 3rem;
  min-height: 100vh;
  background: #f9fafc;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #333;
}

/* Form Section */
.form-section {
  flex: 1;
  max-width: 400px;
  background: #ffffff;
  padding: 2.5rem;
  border-radius: 12px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
  border-top: 6px solid #005587; /* Marsh blue */
}

.form-section h2 {
  font-size: 1.8rem;
  margin-bottom: 1.8rem;
  color: #005587;
  text-align: center;
  font-weight: 600;
}

.form-section form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Input Fields */
.form-section input,
.form-section select {
  padding: 0.9rem 1rem;
  border: 1px solid #cfd8dc;
  border-radius: 8px;
  font-size: 1rem;
  outline: none;
  transition: border 0.3s ease, box-shadow 0.3s ease;
}

.form-section input:focus,
.form-section select:focus {
  border-color: #0077c8;
  box-shadow: 0 0 6px rgba(0, 119, 200, 0.2);
}

/* Primary Button */
.form-section button[type="submit"] {
  background: linear-gradient(135deg, #005587, #0077c8);
  color: #fff;
  font-weight: 600;
  padding: 0.9rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.2s ease;
}

.form-section button[type="submit"]:hover {
  background: linear-gradient(135deg, #0077c8, #0091da);
  transform: translateY(-2px);
}

.form-section button[type="submit"]:disabled {
  background: #cfd8dc;
  cursor: not-allowed;
}

/* Secondary Button (Login link) */
.secondary-btn {
  background: none;
  border: 1px solid #005587;
  padding: 0.5rem 1rem;
  border-radius: 6px;
  font-size: 0.9rem;
  font-weight: 500;
  color: #005587;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-left: 0.5rem;
}

.secondary-btn:hover {
  background: #005587;
  color: #fff;
}

/* Messages */
.success-message {
  margin-top: 1rem;
  color: #2e7d32;
  font-size: 0.95rem;
  font-weight: 500;
}

.error-message {
  margin-top: 1rem;
  color: #c62828;
  font-size: 0.95rem;
  font-weight: 500;
}

/* Login link */
.login-link {
  margin-top: 1.5rem;
  text-align: center;
  font-size: 0.95rem;
}

/* Rules Section */
.rules-section {
  flex: 1;
  max-width: 350px;
  background: #ffffff;
  padding: 2rem;
  border-radius: 12px;
  border: 1px solid #e0e0e0;
}

.rules-section h3 {
  font-size: 1.3rem;
  margin-bottom: 1.2rem;
  color: #005587;
  font-weight: 600;
}

.rules-section ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.rules-section li {
  margin-bottom: 0.8rem;
  line-height: 1.5;
  color: #444;
}

.rules-section code {
  background: #eef3f6;
  padding: 0.2rem 0.4rem;
  border-radius: 4px;
  font-size: 0.9rem;
  color: #0077c8;
  font-family: monospace;
}

/* Responsive Design */
@media (max-width: 900px) {
  .signup-container {
    flex-direction: column;
    align-items: center;
    padding: 2rem;
  }

  .form-section,
  .rules-section {
    max-width: 100%;
  }
}





//frontend\frontend\src\app\login\login.css
/* ====== Marsh McLennan Themed Login Page ====== */

/* Container */
.container {
  max-width: 400px;
  margin: 5rem auto;
  padding: 2.5rem;
  background: #ffffff;
  border-radius: 12px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
  border-top: 6px solid #005587; /* Marsh McLennan blue */
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #333;
}

/* Heading */
.container h2 {
  font-size: 1.8rem;
  margin-bottom: 2rem;
  text-align: center;
  font-weight: 600;
  color: #005587;
}

/* Form */
.container form {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
}

/* Input Fields */
.container input {
  padding: 0.9rem 1rem;
  border: 1px solid #cfd8dc;
  border-radius: 8px;
  font-size: 1rem;
  outline: none;
  transition: border 0.3s ease, box-shadow 0.3s ease;
}

.container input:focus {
  border-color: #0077c8;
  box-shadow: 0 0 6px rgba(0, 119, 200, 0.2);
}

/* Primary Button */
.container button[type="submit"] {
  background: linear-gradient(135deg, #005587, #0077c8);
  color: #fff;
  font-weight: 600;
  padding: 0.9rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.2s ease;
}

.container button[type="submit"]:hover {
  background: linear-gradient(135deg, #0077c8, #0091da);
  transform: translateY(-2px);
}

.container button[type="submit"]:disabled {
  background: #cfd8dc;
  cursor: not-allowed;
}

/* Secondary Button (Sign Up link) */
.secondary-btn {
  background: none;
  border: 1px solid #005587;
  padding: 0.5rem 1rem;
  border-radius: 6px;
  font-size: 0.9rem;
  font-weight: 500;
  color: #005587;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-left: 0.5rem;
}

.secondary-btn:hover {
  background: #005587;
  color: #fff;
}

/* Messages */
.success-message {
  margin-top: 1rem;
  color: #2e7d32;
  font-size: 0.95rem;
  font-weight: 500;
}

.error-message {
  margin-top: 1rem;
  color: #c62828;
  font-size: 0.95rem;
  font-weight: 500;
}

/* Footer text */
.container p {
  margin-top: 1.5rem;
  text-align: center;
  font-size: 0.95rem;
  color: #444;
}





frontend\frontend\src\app\shared\navbar\navbar.css
/* ====== Modern Marsh McLennan Inspired Navbar ====== */

.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.8rem 2rem;
  background: linear-gradient(90deg, #003366, #005587, #0077c8); /* Gradient blues */
  color: #fff;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
  position: sticky;
  top: 0;
  z-index: 1000;
}

/* Left Section */
.nav-left {
  display: flex;
  align-items: center;
  gap: 1.2rem;
}

/* .mercer-logo {
  height: 40px;
  margin-right: 2rem;
} */

.mercer-logo {
  height: 40px;
  margin-right: 2rem;
  filter: brightness(0) invert(1); /* Makes logo appear pure white */
}

/* Nav Buttons */
.nav-left button {
  background: none;
  border: none;
  color: #ffffff;
  font-size: 1rem;
  font-weight: 500;
  padding: 0.5rem 1rem;
  border-radius: 6px;
  cursor: pointer;
  position: relative;
  transition: color 0.3s ease;
}

.nav-left button:hover {
  color: #00a9e0;
}

.nav-left button::after {
  content: "";
  position: absolute;
  width: 0;
  height: 2px;
  left: 0;
  bottom: -3px;
  background-color: #00a9e0;
  transition: width 0.3s ease;
}

.nav-left button:hover::after {
  width: 100%;
}

/* Right Section */
.nav-right {
  display: flex;
  align-items: center;
  position: relative;
}

/* User Menu Icon */
.user-icon {
  width: 42px;
  height: 42px;
  border-radius: 50%;
  border: 2px solid #fff;
  cursor: pointer;
  background: #f1f1f1;
  object-fit: cover;
  transition: transform 0.2s ease, box-shadow 0.3s ease;
}

.user-icon:hover {
  transform: scale(1.05);
  box-shadow: 0 0 8px rgba(0, 169, 224, 0.5);
}

/* Dropdown */
.dropdown {
  position: absolute;
  top: 115%;
  right: 0;
  background: #ffffff;
  color: #333;
  border-radius: 10px;
  padding: 1rem;
  min-width: 230px;
  box-shadow: 0 4px 14px rgba(0, 0, 0, 0.2);
  font-size: 0.9rem;
  animation: fadeIn 0.25s ease-in-out;
}

.dropdown p {
  margin: 0.4rem 0;
}

.dropdown .role {
  font-style: italic;
  color: #0077c8;
}

/* Dropdown Buttons */
.dropdown button {
  margin-top: 0.8rem;
  width: 100%;
  padding: 0.6rem;
  border: none;
  border-radius: 6px;
  background: linear-gradient(135deg, #005587, #0077c8);
  color: #fff;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.2s ease;
}

.dropdown button:hover {
  background: linear-gradient(135deg, #0077c8, #00a9e0);
  transform: translateY(-1px);
}

/* Fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-6px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Toggle switch styling */
.switch {
  position: relative;
  display: inline-block;
  width: 42px;
  height: 22px;
  margin-right: 8px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0; left: 0; right: 0; bottom: 0;
  background-color: #ccc;
  border-radius: 22px;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  border-radius: 50%;
  transition: .4s;
}

input:checked + .slider {
  background-color: #0078d7;
}

input:checked + .slider:before {
  transform: translateX(20px);
}

.toggle-theme {
  display: flex;
  align-items: center;
  margin-top: 12px;
}






frontend\frontend\src\app\shared\footer\footer.css
.footer {
  background: #000000; /* solid black footer */
  color: #ffffff; /* white text */
  padding: 40px 20px;
  font-family: 'Segoe UI', Roboto, Arial, sans-serif;
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 100;
}

.footer .container {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  max-width: 1200px;
  margin: 0 auto;
}

.left-section {
  flex: 1 1 45%;
  min-width: 280px;
}

.logo-and-name {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.company-name {
  font-size: 1.4rem;
  font-weight: bold;
  color: #ffffff;
}

.description {
  font-size: 0.95rem;
  line-height: 1.6;
  margin-bottom: 20px;
  color: #cccccc; /* lighter gray for readability */
}

.links {
  margin-bottom: 20px;
}

.links .link {
  margin-right: 15px;
  font-size: 0.9rem;
  color: #aaaaaa;
  text-decoration: none;
  transition: color 0.3s ease;
}

.links .link:hover {
  color: #ffffff;
}

.copyright {
  font-size: 0.8rem;
  color: #888888;
}

.right-section {
  flex: 1 1 40%;
  min-width: 260px;
  text-align: right;
}

.nav-links {
  margin-bottom: 15px;
}

.nav-link {
  margin-left: 20px;
  font-size: 0.95rem;
  color: #aaaaaa;
  text-decoration: none;
  transition: color 0.3s ease;
}

.nav-link:hover {
  color: #ffffff;
}

.social-icons {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
}

.social-button svg {
  fill: #aaaaaa;
  transition: transform 0.3s ease, fill 0.3s ease;
}

.social-button:hover svg {
  transform: scale(1.15);
  fill: #ffffff; /* turns white on hover */
}

/* Responsive design */
@media (max-width: 768px) {
  .footer .container {
    flex-direction: column;
    text-align: center;
  }

  .right-section {
    text-align: center;
    margin-top: 20px;
  }

  .nav-link {
    margin: 0 10px;
  }

  .social-icons {
    justify-content: center;
  }
}






frontend\frontend\src\app\create-job\create-job.html
<app-navbar></app-navbar>

<div class="container">
  <h2>Manage Job Postings</h2>

  <!-- Message Banner -->
  <div *ngIf="message" class="message-box" [ngClass]="message.type">
    {{ message.text }}
  </div>
  
  <section class="create-job-section">
    <h3>Create New Job Posting</h3>
    <form (ngSubmit)="addJob()" #jobForm="ngForm">
      <input type="text" placeholder="Job Title" [(ngModel)]="newJob.title" name="title" required />
      <input type="text" placeholder="Location" [(ngModel)]="newJob.location" name="location" />
      <input type="number" placeholder="Experience (years)" [(ngModel)]="newJob.experience" name="experience" min="0" />
      <textarea placeholder="Job Description" [(ngModel)]="newJob.description" name="description" required></textarea>
      <input type="text" placeholder="Preferred Skills (comma separated)" [(ngModel)]="newJob.preferredSkillsStr" name="preferredSkills" />
      <input type="text" placeholder="Education" [(ngModel)]="newJob.education" name="education" />
      <button type="submit" [disabled]="jobForm.invalid">Add Job</button>
    </form>
  </section>


  <section class="existing-jobs-section" style="margin-top:18px;">
    <h3>Existing Job Postings</h3>
    <div *ngFor="let job of jobs" class="job-card" style="border:1px solid #eee; padding:12px; margin-bottom:10px;">
      <div *ngIf="editingJobId !== job._id">
        <h4>{{ job.title }} <small>({{ job.location }})</small></h4>
        <p>{{ job.description }}</p>
        <p><strong>Experience:</strong> {{ job.experience || 'N/A' }} yrs | <strong>Skills:</strong> {{ job.preferredSkills?.join(', ') }}</p>
        <div class="actions">
          <button (click)="editJob(job)">Edit</button>
          <button (click)="confirmDelete(job._id)">Delete</button>
        </div>
      </div>

      <div *ngIf="editingJobId === job._id">
        <input [(ngModel)]="editedJob.title" />
        <input [(ngModel)]="editedJob.location" />
        <input type="number" [(ngModel)]="editedJob.experience" />
        <textarea [(ngModel)]="editedJob.description"></textarea>
        <input [(ngModel)]="editedJob.preferredSkillsStr" placeholder="comma separated" />
        <div>
          <button (click)="saveEdit(job)">Save</button>
          <button (click)="cancelEdit()">Cancel</button>
        </div>
      </div>
    </div>
  </section>
</div> 





frontend\frontend\src\app\create-job\create-job.ts
import { Component, OnInit } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { NavbarComponent } from '../shared/navbar/navbar';
import { JobService } from '../services/job.service';
import { RouterLink, RouterModule } from '@angular/router';

@Component({
  selector: 'app-create-job',
  standalone: true,
  imports: [FormsModule, CommonModule, RouterModule, NavbarComponent],
  templateUrl: './create-job.html',
  styleUrls: ['./create-job.css']
})
export class CreateJob implements OnInit {
  jobs: any[] = [];

  newJob: any = {
    title: '',
    description: '',
    location: '',
    experience: null,
    preferredSkillsStr: '',
    education: ''
  };

  editingJobId: string | null = null;
  message: { type: 'success' | 'error', text: string } | null = null;
  editedJob: any = {};

  constructor(private jobService: JobService) { }

  ngOnInit() {
    this.getJobs();
  }

  getJobs() {
    this.jobService.list().subscribe(res => this.jobs = res || []);
  }

  showMessage(type: 'success' | 'error', text: string) {
  this.message = { type, text };
  setTimeout(() => this.message = null, 5000); // auto hide after 5s
}

  addJob() {
  const payload = {
    title: this.newJob.title,
    location: this.newJob.location,
    experience: this.newJob.experience,
    description: this.newJob.description,
    preferredSkills: (this.newJob.preferredSkillsStr || '').split(',').map((s: string) => s.trim()).filter(Boolean),
    education: this.newJob.education
  };

  this.jobService.create(payload).subscribe({
    next: (res) => {
      this.jobs.unshift(res);
      this.newJob = { title: '', description: '', location: '', experience: null, preferredSkillsStr: '', education: '' };
      this.showMessage('success', 'Job added successfully!');
    },
    error: () => this.showMessage('error', 'Failed to add job. Please try again.')
  });
}

  confirmDelete(id: string) {
  if (!confirm('Are you sure you want to delete this job?')) return;
  this.jobService.delete(id).subscribe({
    next: () => {
      this.jobs = this.jobs.filter(j => j._id !== id);
      this.showMessage('success', 'Job deleted.');
    },
    error: () => this.showMessage('error', 'Failed to delete job.')
  });
}

  editJob(job: any) {
    this.editingJobId = job._id;
    this.editedJob = { ...job, preferredSkillsStr: (job.preferredSkills || []).join(', ') };
  }

  saveEdit(job: any) {
  const payload = {
    title: this.editedJob.title,
    location: this.editedJob.location,
    experience: this.editedJob.experience,
    description: this.editedJob.description,
    preferredSkills: (this.editedJob.preferredSkillsStr || '').split(',').map((s: string) => s.trim()).filter(Boolean),
    education: this.editedJob.education
  };

  this.jobService.update(job._id, payload).subscribe({
    next: (updated) => {
      const idx = this.jobs.findIndex(j => j._id === job._id);
      if (idx !== -1) this.jobs[idx] = updated;
      this.editingJobId = null;
      this.showMessage('success', 'Job updated successfully!');
    },
    error: () => this.showMessage('error', 'Failed to update job.')
  });
}

  cancelEdit() {
    this.editingJobId = null;
  }
}







frontend\frontend\src\app\create-job\create-job.css
/* General Page Styling */
.container {
  max-width: 1100px;
  margin: 40px auto;
  padding: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: #2c3e50;
}

h2 {
  font-size: 26px;
  font-weight: 600;
  color: #003366;
  margin-bottom: 20px;
}

h3 {
  font-size: 20px;
  font-weight: 600;
  margin-bottom: 15px;
  color: #005a8c;
}

/* Create Job Form */
.create-job-section form {
  display: grid;
  grid-template-columns: 1fr;
  gap: 15px;
  background: #ffffff;
  padding: 25px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0,0,0,0.08);
}

.create-job-section input,
.create-job-section textarea {
  padding: 12px;
  border: 1px solid #d1d9e6;
  border-radius: 6px;
  font-size: 15px;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.create-job-section input:focus,
.create-job-section textarea:focus {
  outline: none;
  border-color: #005a8c;
  box-shadow: 0 0 5px rgba(0,90,140,0.3);
}

/* Submit Button */
.create-job-section button {
  background: linear-gradient(135deg, #005a8c, #0077b6);
  color: white;
  font-size: 15px;
  font-weight: 500;
  padding: 12px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.2s ease;
}

.create-job-section button:hover {
  background: linear-gradient(135deg, #0077b6, #0096c7);
  transform: translateY(-2px);
}

/* Existing Jobs Section */
.existing-jobs-section {
  margin-top: 30px;
}

.job-card {
  background: #ffffff;
  border: 1px solid #e1eaf4;
  border-radius: 10px;
  padding: 20px;
  margin-bottom: 18px;
  box-shadow: 0 3px 6px rgba(0,0,0,0.05);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.job-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 14px rgba(0,0,0,0.08);
}

.job-card h4 {
  font-size: 18px;
  font-weight: 600;
  color: #003366;
  margin-bottom: 8px;
}

.job-card p {
  font-size: 14px;
  margin: 5px 0;
  color: #555;
}

/* Action Buttons */
.actions button {
  margin-right: 10px;
  padding: 8px 14px;
  font-size: 14px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.actions button:first-child {
  background: #0077b6;
  color: #fff;
}

.actions button:first-child:hover {
  background: #0096c7;
}

.actions button:last-child {
  background: #e63946;
  color: #fff;
}

.actions button:last-child:hover {
  background: #c92a3d;
}

/* Edit Mode */
.job-card input,
.job-card textarea {
  width: 100%;
  margin-bottom: 10px;
  padding: 10px;
  border: 1px solid #ccd6e0;
  border-radius: 6px;
  font-size: 14px;
}


/* Form Section */
.create-job-section {
  background: #f9fafb;
  border: 1px solid #d1d9e6;
  border-radius: 6px;
  padding: 24px;
  box-shadow: 0 2px 6px rgb(0 0 0 / 0.05);
  margin-bottom: 32px;
}


/* HR line under Manage Job Postings */
h2 {
  font-size: 26px;
  font-weight: 600;
  color: #003366;
  margin-bottom: 10px; /* reduce margin for hr */
}

h2::after {
  content: "";
  display: block;
  width: 100%;
  height: 2px;
  background: linear-gradient(to right, #005a8c, #0096c7);
  margin: 8px 0 20px;
  border-radius: 2px;
}

/* Italic placeholders */
.create-job-section input::placeholder,
.create-job-section textarea::placeholder,
.job-card input::placeholder,
.job-card textarea::placeholder {
  font-style: italic;
  color: #7a7a7a; /* softer gray for readability */
}


.message-box {
  padding: 12px 18px;
  border-radius: 6px;
  margin-bottom: 18px;
  font-size: 15px;
  font-weight: 500;
  animation: fadeIn 0.3s ease-in-out;
}

.message-box.success {
  background: #e6f9f0;
  color: #0f5132;
  border: 1px solid #badbcc;
}

.message-box.error {
  background: #fde2e2;
  color: #842029;
  border: 1px solid #f5c2c7;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-5px); }
  to { opacity: 1; transform: translateY(0); }
}




