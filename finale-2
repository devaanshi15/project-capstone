//frontend\frontend\src\app\resume-upload\resume-upload.ts
selectedFileName: string | null = null;

onFileSelected(event: any) {
  const file = event.target.files[0];
  if (file) {
    this.selectedFileName = file.name;
    this.selectedFile = file; // your existing file handling
  }
}

onDrop(event: DragEvent) {
  event.preventDefault();
  this.isDragOver = false;
  if (event.dataTransfer?.files?.length) {
    const file = event.dataTransfer.files[0];
    this.selectedFileName = file.name;
    this.selectedFile = file;
  }
}










//frontend\frontend\src\app\resume-upload\resume-upload.css
/* Container Styling */
.container {
  max-width: 900px;
  margin: 40px auto;
  padding: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: #2c3e50;
}

h2 {
  font-size: 26px;
  font-weight: 600;
  color: #003366;
  margin-bottom: 20px;
}

/* Upload Box Styling */
.upload-box {
  border: 2px dashed #0077b6;
  border-radius: 10px;
  padding: 40px;
  text-align: center;
  background-color: #f9fafb;
  color: #555;
  font-size: 15px;
  cursor: pointer;
  transition: background 0.3s ease, border-color 0.3s ease, transform 0.2s ease;
  margin-bottom: 1rem;
}

.upload-box:hover {
  background-color: #eef6fb;
  border-color: #0096c7;
  transform: translateY(-2px);
}

.upload-box.dragover {
  background-color: #dff6ff;
  border-color: #005a8c;
}

.upload-box i {
  font-size: 40px;
  color: #0077b6;
  margin-bottom: 12px;
  display: block;
}

.upload-box span {
  display: block;
  margin-top: 6px;
  font-size: 14px;
  color: #777;
  font-style: italic;
}

.upload-box input[type="file"] {
  display: none; /* Hide real input */
}

/* File selected inside upload box */
.file-selected {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  font-size: 15px;
  color: #004080;
  font-weight: 500;
}

.file-selected i {
  font-size: 22px;
  color: #e63946;
}

/* Candidate Summary Card */
.candidate-summary-card {
  background: #ffffff;
  border: 1px solid #e1eaf4;
  border-radius: 10px;
  padding: 20px;
  box-shadow: 0 3px 6px rgba(0,0,0,0.05);
}

.summary-card {
  margin-bottom: 18px;
  padding: 16px;
  border: 1px solid #dfe7f1;
  border-radius: 8px;
  background: #fafafa;
  position: relative;
}

.summary-details p {
  margin: 6px 0;
  font-size: 14px;
  color: #333;
}

/* Export PDF Button Styling */
.export-button-container {
  text-align: right;
  margin-top: 10px;
}

.export-btn {
  padding: 6px 14px;
  font-size: 13px;
  border-radius: 20px;
  background: linear-gradient(135deg, #0077b6, #0096c7);
  color: #fff;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
}

.export-btn:hover {
  background: linear-gradient(135deg, #005f8c, #0077b6);
  transform: translateY(-2px);
}








//frontend\frontend\src\app\resume-upload\resume-upload.html
<app-navbar></app-navbar>

<div class="container">
  <h2>Resume Upload</h2>

  <form (ngSubmit)="onSubmit()" #resumeForm="ngForm" enctype="multipart/form-data" novalidate>
    <!-- Candidate Name -->
    <label>
      Candidate Name:
      <input
        type="text"
        name="candidateName"
        [(ngModel)]="candidateName"
        [readonly]="!isHrAdmin"
        required
      />
    </label>

    <!-- Select Job -->
    <label>
      Select Job Description:
      <select
        name="jobId"
        [(ngModel)]="selectedJobId"
        (change)="onJobChange()"
        required
      >
        <option value="" disabled>Select a job</option>
        <option *ngFor="let job of jobs" [value]="job._id">{{ job.title }}</option>
      </select>
    </label>

    <!-- JD Link -->
    <div *ngIf="selectedJob" style="margin-bottom: 1rem;">
      <a (click)="viewJD()" style="text-decoration: underline; cursor: pointer;">
        Read full JD: {{ selectedJob.title }}
      </a>
    </div>

    <!-- Drag & Drop Resume Upload -->
    <div
      class="upload-box"
      (click)="fileInput.click()"
      (dragover)="onDragOver($event)"
      (dragleave)="onDragLeave($event)"
      (drop)="onDrop($event)"
      [class.dragover]="isDragOver"
    >
      <i class="fas fa-cloud-upload-alt" *ngIf="!selectedFileName"></i>

      <div *ngIf="!selectedFileName">
        <strong>Drag & drop your resume here</strong>
        <span>or click to browse (PDF only)</span>
      </div>

      <div *ngIf="selectedFileName" class="file-selected">
        <i class="fas fa-file-pdf"></i>
        <span>{{ selectedFileName }}</span>
      </div>

      <input
        type="file"
        #fileInput
        (change)="onFileSelected($event)"
        accept=".pdf"
      />
    </div>

    <!-- HR Admin Actions -->
    <div *ngIf="isHrAdmin" style="margin-top: 1rem;">
      <button type="button" (click)="uploadResume()" [disabled]="!canUpload()" style="margin-right: 1rem;">
        Upload
      </button>

      <button type="button" (click)="analyzeResume()" [disabled]="!uploadedResumeId || loadingAi">
        {{ loadingAi ? 'Analyzing...' : 'AI Analyze' }}
      </button>

      <p *ngIf="uploadMessage" style="color: green; margin-top: 0.5rem;">
        {{ uploadMessage }}
      </p>
      <p *ngIf="errorAi" style="color: red; margin-top: 0.5rem;">
        {{ errorAi }}
      </p>
    </div>

    <!-- Candidate Actions -->
    <div *ngIf="!isHrAdmin" style="margin-top: 1rem;">
      <button type="submit" [disabled]="!canSubmit()">Submit</button>
      <p *ngIf="submitMessage" style="color: green; margin-top: 0.5rem;">
        {{ submitMessage }}
      </p>
    </div>
  </form>

  <!-- AI Candidate Summary Card -->
  <div *ngIf="aiResults?.length" class="candidate-summary-card" style="margin-top: 2rem;">
    <h3>AI Resume Analysis Results</h3>
    <div *ngFor="let r of aiResults" class="summary-card">
      <div class="summary-details">
        <p><strong>Candidate Name:</strong> {{ r.candidateName }}</p>
        <p><strong>Experience:</strong> {{ r.experience }}</p>
        <p><strong>Skills:</strong> {{ r.skills?.join(', ') }}</p>
        <p><strong>Relevance Score:</strong> {{ r.relevanceScore }}</p>
        <p><strong>Comments/Review:</strong> {{ r.comments }}</p>
        <p><strong>Resume Link:</strong>
          <a [href]="r.resumeUrl" target="_blank" rel="noopener noreferrer">View Resume</a>
        </p>
      </div>
      <!-- Export button at the bottom -->
      <div class="export-button-container">
        <button class="export-btn" (click)="exportReport(r.resumeId)">ðŸ“„ Export PDF</button>
      </div>
    </div>
  </div>
</div>

    </div>
  </div>
</div>

